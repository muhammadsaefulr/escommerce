basePath: /api
definitions:
  entity.AuthLoginUser:
    properties:
      email:
        minLength: 8
        type: string
      password:
        minLength: 3
        type: string
    required:
    - email
    - password
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        maxLength: 100
        minLength: 1
        type: string
      id:
        type: string
      name:
        maxLength: 75
        minLength: 3
        type: string
      password:
        minLength: 3
        type: string
      role_id:
        type: integer
      updated_at:
        type: string
    required:
    - email
    - name
    - password
    type: object
  entity.UserDataReturnViews:
    properties:
      email:
        type: string
      name:
        type: string
      role_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Test Application
  title: Escommerce API
  version: "1.0"
paths:
  /user/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns user data
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.AuthLoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated user
          schema:
            $ref: '#/definitions/entity.UserDataReturnViews'
      summary: User Customer Auth
      tags:
      - UserCustomerAuth
  /user/delete/:id:
    delete:
      consumes:
      - '*/*'
      description: Delete user by id
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete user
          schema:
            $ref: '#/definitions/entity.User'
      summary: Delete user by id
      tags:
      - UserCustomerDelete
  /user/get/:id:
    get:
      consumes:
      - '*/*'
      description: Get user by id
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get user
          schema:
            $ref: '#/definitions/entity.User'
      summary: Get user by id
      tags:
      - UserCustomerGetById
  /user/register:
    post:
      consumes:
      - application/json
      description: Register new user customer
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created new user
          schema:
            $ref: '#/definitions/entity.User'
      summary: Create new user customer
      tags:
      - UserCustomerRegister
  /user/update/:id:
    put:
      consumes:
      - application/json
      description: Update user data
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update user
          schema:
            $ref: '#/definitions/entity.User'
      summary: Update user data
      tags:
      - UserCustomerUpdate
schemes:
- http
swagger: "2.0"
